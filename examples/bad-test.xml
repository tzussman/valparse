<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: ./bad</line>
</preamble>

<pid>10220</pid>
<ppid>8125</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--leak-check=full</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=bad-test.xml</arg>
    <arg>--gen-suppressions=all</arg>
    <arg>--suppressions=bad.supp</arg>
  </vargv>
  <argv>
    <exe>./bad</exe>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.047 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>UninitValue</kind>
  <what>Use of uninitialised value of size 8</what>
  <stack>
    <frame>
      <ip>0x108706</ip>
      <obj>/home/tz2294/valparse/examples/bad</obj>
      <fn>main</fn>
      <dir>/home/tz2294/valparse/examples</dir>
      <file>bad.c</file>
      <line>10</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Value8</skind>
    <sframe> <fun>main</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:main
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Value8</skind>
    <sframe> <fun>main</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Value8
   fun:main
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0x1</unique>
  <tid>1</tid>
  <kind>InvalidRead</kind>
  <what>Invalid read of size 4</what>
  <stack>
    <frame>
      <ip>0x108706</ip>
      <obj>/home/tz2294/valparse/examples/bad</obj>
      <fn>main</fn>
      <dir>/home/tz2294/valparse/examples</dir>
      <file>bad.c</file>
      <line>10</line>
    </frame>
  </stack>
  <auxwhat>Address 0x0 is not stack'd, malloc'd or (recently) free'd</auxwhat>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Addr4</skind>
    <sframe> <fun>main</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:main
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Addr4</skind>
    <sframe> <fun>main</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Addr4
   fun:main
}
]]>
    </rawtext>
  </suppression>
<fatal_signal>
  <tid>1</tid>
  <signo>11</signo>
  <signame>SIGSEGV</signame>
  <sicode>1</sicode>
  <event>Access not within mapped region</event>
  <siaddr>0x0</siaddr>
  <stack>
    <frame>
      <ip>0x108706</ip>
      <obj>/home/tz2294/valparse/examples/bad</obj>
      <fn>main</fn>
      <dir>/home/tz2294/valparse/examples</dir>
      <file>bad.c</file>
      <line>10</line>
    </frame>
  </stack>
</fatal_signal>


<status>
  <state>FINISHED</state>
  <time>00:00:00:00.694 </time>
</status>

<errorcounts>
  <pair>
    <count>1</count>
    <unique>0x1</unique>
  </pair>
  <pair>
    <count>1</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
  <pair>
    <count>2</count>
    <name>&lt;definite-leak-ignore&gt;</name>
  </pair>
</suppcounts>

</valgrindoutput>

